{"remainingRequest":"/work/vue learning/yamini-demo/deploy/shopping_cart/node_modules/thread-loader/dist/cjs.js!/work/vue learning/yamini-demo/deploy/shopping_cart/node_modules/babel-loader/lib/index.js!/work/vue learning/yamini-demo/deploy/shopping_cart/node_modules/eslint-loader/index.js??ref--14-0!/work/vue learning/yamini-demo/deploy/shopping_cart/src/store/product/actions.js","dependencies":[{"path":"/work/vue learning/yamini-demo/deploy/shopping_cart/src/store/product/actions.js","mtime":1642065605803},{"path":"/work/vue learning/yamini-demo/deploy/shopping_cart/babel.config.js","mtime":1642081672546},{"path":"/work/vue learning/yamini-demo/deploy/shopping_cart/node_modules/cache-loader/dist/cjs.js","mtime":1642081631615},{"path":"/work/vue learning/yamini-demo/deploy/shopping_cart/node_modules/thread-loader/dist/cjs.js","mtime":1642081631615},{"path":"/work/vue learning/yamini-demo/deploy/shopping_cart/node_modules/babel-loader/lib/index.js","mtime":1642081632383},{"path":"/work/vue learning/yamini-demo/deploy/shopping_cart/node_modules/eslint-loader/index.js","mtime":1642081631731}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/work/vue learning/yamini-demo/deploy/shopping_cart/src/store/product/actions.js"],"names":["loadProducts","context","payload","siteUrl","getters","fetch","method","headers","body","JSON","stringify","response","json","responseData","console","log","ok","error","Error","message","products","key","data","product","id","_id","productName","name","price","images","productPictures","length","description","push","commit","loadProduct","productId","saveProduct","url","type","state","index","map","prod","indexOf","splice","deleteProducts"],"mappings":"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","sourcesContent":["export default {\n\tasync loadProducts (context, payload) {\n\t\tconst siteUrl = context.getters.siteUrl\n\t\tconst response = await fetch(`${siteUrl}/products/`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\tbody: JSON.stringify(payload)\n\t\t})\n\t\tconst responseData = await response.json()\n\t\tconsole.log(responseData)\n\t\tif (!response.ok) {\n\t\t\tconst error = new Error(responseData.message || 'Failed to load!')\n\t\t\tthrow error\n\t\t}\n\t\tconst products = []\n\t\tfor (const key in responseData.data) {\n\t\t\tconst product = {\n\t\t\t\tid: (responseData.data[key]._id !== '') ? responseData.data[key]._id : '',\n\t\t\t\tproductName: (responseData.data[key].name !== '') ? responseData.data[key].name : '',\n\t\t\t\tprice: (responseData.data[key].price !== '') ? responseData.data[key].price : '0',\n\t\t\t\timages: (responseData.data[key].productPictures.length > 0) ? responseData.data[key].productPictures : [],\n\t\t\t\tdescription: (responseData.data[key].description !== '') ? responseData.data[key].description : ''\n\t\t\t}\n\t\t\tproducts.push(product)\n\t\t}\n\t\tcontext.commit('setProducts', products)\n\t},\n\tasync loadProduct (context, payload) {\n\t\tconst siteUrl = context.getters.siteUrl\n\t\tconst productId = payload.id\n\t\tconst response = await fetch(`${siteUrl}/products/${productId}`, {\n\t\t\tmethod: 'Get'\n\t\t})\n\t\tconst responseData = await response.json()\n\t\tif (!response.ok) {\n\t\t\tconst error = new Error(responseData.message || 'Failed to load!')\n\t\t\tthrow error\n\t\t}\n\t\t\tconst product = {\n\t\t\t\tid: (responseData.data._id !== '') ? responseData.data._id : '',\n\t\t\t\tproductName: (responseData.data.name !== '') ? responseData.data.name : '',\n\t\t\t\tprice: (responseData.data.price !== '') ? responseData.data.price : '0',\n\t\t\t\timages: (responseData.data.productPictures.length > 0) ? responseData.data.productPictures : [],\n\t\t\t\tdescription: (responseData.data.description !== '') ? responseData.data.description : ''\n\t\t\t}\n\t\treturn product\n\t},\n\tasync saveProduct (context, payload) {\n\t\tconst siteUrl = context.getters.siteUrl\n\t\tlet url = ''\n\t\tif (payload.type === 'edit') {\n\t\t\tconst productId = payload.id\n\t\t\turl = `${siteUrl}/products/update/${productId}`\n\t\t} else {\n\t\t\turl = `${siteUrl}/products/create`\n\t\t}\n\t\tconst response = await fetch(`${url}`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\tbody: JSON.stringify(payload)\n\t\t})\n\t\tconst responseData = await response.json()\n\t\tif (!response.ok) {\n\t\t\tconst error = new Error(responseData.message || 'Failed to load!')\n\t\t\tthrow error\n\t\t} else {\n\t\t\tconst products = context.state.products\n\t\t\tconst product = {\n\t\t\t\tid: (responseData.data._id !== '') ? responseData.data._id : '',\n\t\t\t\tproductName: (responseData.data.name !== '') ? responseData.data.name : '',\n\t\t\t\tprice: (responseData.data.price !== '') ? responseData.data.price : '0',\n\t\t\t\timages: (responseData.data.productPictures.length > 0) ? responseData.data.productPictures : [],\n\t\t\t\tdescription: (responseData.data.description !== '') ? responseData.data.description : ''\n\t\t\t}\n\t\t\tif (payload.type === 'edit') {\n\t\t\tconst index = products.map(prod => prod.id).indexOf(product.id)\n\t\t\tproducts.splice(index, 1)\n\t\t\t}\n\t\t\tproducts.push(product)\n\t\t\tcontext.commit('setProducts', products)\n\t\t}\n\n\t\t// \tconst product = {\n\t\t// \t\tid: (responseData.data._id !== '') ? responseData.data._id : '',\n\t\t// \t\tproductName: (responseData.data.name !== '') ? responseData.data.name : '',\n\t\t// \t\tprice: (responseData.data.price !== '') ? responseData.data.price : '0',\n\t\t// \t\timages: (responseData.data.productPictures.length > 0) ? responseData.data.productPictures : null,\n\t\t// \t\tdescription: (responseData.data.description !== '') ? responseData.data.description : ''\n\t\t// \t}\n\t\t// return product\n\t},\n\tasync deleteProducts (context, payload) {\n\t\tconst siteUrl = context.getters.siteUrl\n\t\tconst products = context.state.products\n\t\tconst productId = products[payload.index].id\n\t\tconst response = await fetch(`${siteUrl}/products/delete/${productId}`, {\n\t\t\tmethod: 'DELETE'\n\t\t})\n\t\tconst responseData = await response.json()\n\t\tif (!response.ok) {\n\t\t\tconst error = new Error(responseData.message || 'Failed to load!')\n\t\t\tthrow error\n\t\t}\n\t\tproducts.splice(payload.index, 1)\n\t\treturn responseData\n\t}\n}\n"]}]}