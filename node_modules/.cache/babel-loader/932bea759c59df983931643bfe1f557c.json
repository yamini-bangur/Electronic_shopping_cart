{"remainingRequest":"/work/vue learning/yamini-demo/deploy/Electronic_shopping_cart/node_modules/babel-loader/lib/index.js!/work/vue learning/yamini-demo/deploy/Electronic_shopping_cart/node_modules/eslint-loader/index.js??ref--14-0!/work/vue learning/yamini-demo/deploy/Electronic_shopping_cart/src/store/product/actions.js","dependencies":[{"path":"/work/vue learning/yamini-demo/deploy/Electronic_shopping_cart/src/store/product/actions.js","mtime":1642083091145},{"path":"/work/vue learning/yamini-demo/deploy/Electronic_shopping_cart/babel.config.js","mtime":1642081672546},{"path":"/work/vue learning/yamini-demo/deploy/Electronic_shopping_cart/node_modules/cache-loader/dist/cjs.js","mtime":1642081631615},{"path":"/work/vue learning/yamini-demo/deploy/Electronic_shopping_cart/node_modules/babel-loader/lib/index.js","mtime":1642081632383},{"path":"/work/vue learning/yamini-demo/deploy/Electronic_shopping_cart/node_modules/eslint-loader/index.js","mtime":1642081631731}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/work/vue learning/yamini-demo/deploy/Electronic_shopping_cart/src/store/product/actions.js"],"names":["loadProducts","context","payload","siteUrl","getters","fetch","method","headers","body","JSON","stringify","response","json","responseData","ok","error","Error","message","products","key","data","product","id","_id","productName","name","price","images","productPictures","length","description","push","commit","loadProduct","productId","saveProduct","url","type","state","index","map","prod","indexOf","splice","deleteProducts"],"mappings":";;;;;;;;;;;;;AAAA,eAAe;AACRA,EAAAA,YADQ,wBACMC,OADN,EACeC,OADf,EACwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAC/BC,cAAAA,OAD+B,GACrBF,OAAO,CAACG,OAAR,CAAgBD,OADK;AAAA;AAAA,qBAEdE,KAAK,WAAIF,OAAJ,iBAAyB;AACpDG,gBAAAA,MAAM,EAAE,MAD4C;AAEpDC,gBAAAA,OAAO,EAAE;AAAE,kCAAgB;AAAlB,iBAF2C;AAGpDC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,OAAf;AAH8C,eAAzB,CAFS;;AAAA;AAE/BS,cAAAA,QAF+B;AAAA;AAAA,qBAOVA,QAAQ,CAACC,IAAT,EAPU;;AAAA;AAO/BC,cAAAA,YAP+B;;AAAA,kBAQhCF,QAAQ,CAACG,EARuB;AAAA;AAAA;AAAA;;AAS9BC,cAAAA,KAT8B,GAStB,IAAIC,KAAJ,CAAUH,YAAY,CAACI,OAAb,IAAwB,iBAAlC,CATsB;AAAA,oBAU9BF,KAV8B;;AAAA;AAY/BG,cAAAA,QAZ+B,GAYpB,EAZoB;;AAarC,mBAAWC,GAAX,IAAkBN,YAAY,CAACO,IAA/B,EAAqC;AAC9BC,gBAAAA,OAD8B,GACpB;AACfC,kBAAAA,EAAE,EAAGT,YAAY,CAACO,IAAb,CAAkBD,GAAlB,EAAuBI,GAAvB,KAA+B,EAAhC,GAAsCV,YAAY,CAACO,IAAb,CAAkBD,GAAlB,EAAuBI,GAA7D,GAAmE,EADxD;AAEfC,kBAAAA,WAAW,EAAGX,YAAY,CAACO,IAAb,CAAkBD,GAAlB,EAAuBM,IAAvB,KAAgC,EAAjC,GAAuCZ,YAAY,CAACO,IAAb,CAAkBD,GAAlB,EAAuBM,IAA9D,GAAqE,EAFnE;AAGfC,kBAAAA,KAAK,EAAGb,YAAY,CAACO,IAAb,CAAkBD,GAAlB,EAAuBO,KAAvB,KAAiC,EAAlC,GAAwCb,YAAY,CAACO,IAAb,CAAkBD,GAAlB,EAAuBO,KAA/D,GAAuE,GAH/D;AAIfC,kBAAAA,MAAM,EAAGd,YAAY,CAACO,IAAb,CAAkBD,GAAlB,EAAuBS,eAAvB,CAAuCC,MAAvC,GAAgD,CAAjD,GAAsDhB,YAAY,CAACO,IAAb,CAAkBD,GAAlB,EAAuBS,eAA7E,GAA+F,EAJxF;AAKfE,kBAAAA,WAAW,EAAGjB,YAAY,CAACO,IAAb,CAAkBD,GAAlB,EAAuBW,WAAvB,KAAuC,EAAxC,GAA8CjB,YAAY,CAACO,IAAb,CAAkBD,GAAlB,EAAuBW,WAArE,GAAmF;AALjF,iBADoB;AAQpCZ,gBAAAA,QAAQ,CAACa,IAAT,CAAcV,OAAd;AACA;;AACDpB,cAAAA,OAAO,CAAC+B,MAAR,CAAe,aAAf,EAA8Bd,QAA9B;;AAvBqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwBrC,GAzBa;AA0BRe,EAAAA,WA1BQ,uBA0BKhC,OA1BL,EA0BcC,OA1Bd,EA0BuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAC9BC,cAAAA,OAD8B,GACpBF,OAAO,CAACG,OAAR,CAAgBD,OADI;AAE9B+B,cAAAA,SAF8B,GAElBhC,OAAO,CAACoB,EAFU;AAAA;AAAA,qBAGbjB,KAAK,WAAIF,OAAJ,uBAAwB+B,SAAxB,GAAqC;AAChE5B,gBAAAA,MAAM,EAAE;AADwD,eAArC,CAHQ;;AAAA;AAG9BK,cAAAA,QAH8B;AAAA;AAAA,qBAMTA,QAAQ,CAACC,IAAT,EANS;;AAAA;AAM9BC,cAAAA,YAN8B;;AAAA,kBAO/BF,QAAQ,CAACG,EAPsB;AAAA;AAAA;AAAA;;AAQ7BC,cAAAA,KAR6B,GAQrB,IAAIC,KAAJ,CAAUH,YAAY,CAACI,OAAb,IAAwB,iBAAlC,CARqB;AAAA,oBAS7BF,KAT6B;;AAAA;AAW7BM,cAAAA,OAX6B,GAWnB;AACfC,gBAAAA,EAAE,EAAGT,YAAY,CAACO,IAAb,CAAkBG,GAAlB,KAA0B,EAA3B,GAAiCV,YAAY,CAACO,IAAb,CAAkBG,GAAnD,GAAyD,EAD9C;AAEfC,gBAAAA,WAAW,EAAGX,YAAY,CAACO,IAAb,CAAkBK,IAAlB,KAA2B,EAA5B,GAAkCZ,YAAY,CAACO,IAAb,CAAkBK,IAApD,GAA2D,EAFzD;AAGfC,gBAAAA,KAAK,EAAGb,YAAY,CAACO,IAAb,CAAkBM,KAAlB,KAA4B,EAA7B,GAAmCb,YAAY,CAACO,IAAb,CAAkBM,KAArD,GAA6D,GAHrD;AAIfC,gBAAAA,MAAM,EAAGd,YAAY,CAACO,IAAb,CAAkBQ,eAAlB,CAAkCC,MAAlC,GAA2C,CAA5C,GAAiDhB,YAAY,CAACO,IAAb,CAAkBQ,eAAnE,GAAqF,EAJ9E;AAKfE,gBAAAA,WAAW,EAAGjB,YAAY,CAACO,IAAb,CAAkBU,WAAlB,KAAkC,EAAnC,GAAyCjB,YAAY,CAACO,IAAb,CAAkBU,WAA3D,GAAyE;AALvE,eAXmB;AAAA,gDAkB7BT,OAlB6B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBpC,GA7Ca;AA8CRc,EAAAA,WA9CQ,uBA8CKlC,OA9CL,EA8CcC,OA9Cd,EA8CuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAC9BC,cAAAA,OAD8B,GACpBF,OAAO,CAACG,OAAR,CAAgBD,OADI;AAEhCiC,cAAAA,GAFgC,GAE1B,EAF0B;;AAGpC,kBAAIlC,OAAO,CAACmC,IAAR,KAAiB,MAArB,EAA6B;AACtBH,gBAAAA,SADsB,GACVhC,OAAO,CAACoB,EADE;AAE5Bc,gBAAAA,GAAG,aAAMjC,OAAN,8BAAiC+B,SAAjC,CAAH;AACA,eAHD,MAGO;AACNE,gBAAAA,GAAG,aAAMjC,OAAN,qBAAH;AACA;;AARmC;AAAA,qBASbE,KAAK,WAAI+B,GAAJ,GAAW;AACtC9B,gBAAAA,MAAM,EAAE,MAD8B;AAEtCC,gBAAAA,OAAO,EAAE;AAAE,kCAAgB;AAAlB,iBAF6B;AAGtCC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,OAAf;AAHgC,eAAX,CATQ;;AAAA;AAS9BS,cAAAA,QAT8B;AAAA;AAAA,qBAcTA,QAAQ,CAACC,IAAT,EAdS;;AAAA;AAc9BC,cAAAA,YAd8B;;AAAA,kBAe/BF,QAAQ,CAACG,EAfsB;AAAA;AAAA;AAAA;;AAgB7BC,cAAAA,KAhB6B,GAgBrB,IAAIC,KAAJ,CAAUH,YAAY,CAACI,OAAb,IAAwB,iBAAlC,CAhBqB;AAAA,oBAiB7BF,KAjB6B;;AAAA;AAmB7BG,cAAAA,QAnB6B,GAmBlBjB,OAAO,CAACqC,KAAR,CAAcpB,QAnBI;AAoB7BG,cAAAA,OApB6B,GAoBnB;AACfC,gBAAAA,EAAE,EAAGT,YAAY,CAACO,IAAb,CAAkBG,GAAlB,KAA0B,EAA3B,GAAiCV,YAAY,CAACO,IAAb,CAAkBG,GAAnD,GAAyD,EAD9C;AAEfC,gBAAAA,WAAW,EAAGX,YAAY,CAACO,IAAb,CAAkBK,IAAlB,KAA2B,EAA5B,GAAkCZ,YAAY,CAACO,IAAb,CAAkBK,IAApD,GAA2D,EAFzD;AAGfC,gBAAAA,KAAK,EAAGb,YAAY,CAACO,IAAb,CAAkBM,KAAlB,KAA4B,EAA7B,GAAmCb,YAAY,CAACO,IAAb,CAAkBM,KAArD,GAA6D,GAHrD;AAIfC,gBAAAA,MAAM,EAAGd,YAAY,CAACO,IAAb,CAAkBQ,eAAlB,CAAkCC,MAAlC,GAA2C,CAA5C,GAAiDhB,YAAY,CAACO,IAAb,CAAkBQ,eAAnE,GAAqF,EAJ9E;AAKfE,gBAAAA,WAAW,EAAGjB,YAAY,CAACO,IAAb,CAAkBU,WAAlB,KAAkC,EAAnC,GAAyCjB,YAAY,CAACO,IAAb,CAAkBU,WAA3D,GAAyE;AALvE,eApBmB;;AA2BnC,kBAAI5B,OAAO,CAACmC,IAAR,KAAiB,MAArB,EAA6B;AACvBE,gBAAAA,KADuB,GACfrB,QAAQ,CAACsB,GAAT,CAAa,UAAAC,IAAI;AAAA,yBAAIA,IAAI,CAACnB,EAAT;AAAA,iBAAjB,EAA8BoB,OAA9B,CAAsCrB,OAAO,CAACC,EAA9C,CADe;AAE7BJ,gBAAAA,QAAQ,CAACyB,MAAT,CAAgBJ,KAAhB,EAAuB,CAAvB;AACC;;AACDrB,cAAAA,QAAQ,CAACa,IAAT,CAAcV,OAAd;AACApB,cAAAA,OAAO,CAAC+B,MAAR,CAAe,aAAf,EAA8Bd,QAA9B;;AAhCmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2CpC,GAzFa;AA0FR0B,EAAAA,cA1FQ,0BA0FQ3C,OA1FR,EA0FiBC,OA1FjB,EA0F0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACjCC,cAAAA,OADiC,GACvBF,OAAO,CAACG,OAAR,CAAgBD,OADO;AAEjCe,cAAAA,QAFiC,GAEtBjB,OAAO,CAACqC,KAAR,CAAcpB,QAFQ;AAGjCgB,cAAAA,SAHiC,GAGrBhB,QAAQ,CAAChB,OAAO,CAACqC,KAAT,CAAR,CAAwBjB,EAHH;AAAA;AAAA,qBAIhBjB,KAAK,WAAIF,OAAJ,8BAA+B+B,SAA/B,GAA4C;AACvE5B,gBAAAA,MAAM,EAAE;AAD+D,eAA5C,CAJW;;AAAA;AAIjCK,cAAAA,QAJiC;AAAA;AAAA,qBAOZA,QAAQ,CAACC,IAAT,EAPY;;AAAA;AAOjCC,cAAAA,YAPiC;;AAAA,kBAQlCF,QAAQ,CAACG,EARyB;AAAA;AAAA;AAAA;;AAShCC,cAAAA,KATgC,GASxB,IAAIC,KAAJ,CAAUH,YAAY,CAACI,OAAb,IAAwB,iBAAlC,CATwB;AAAA,oBAUhCF,KAVgC;;AAAA;AAYvCG,cAAAA,QAAQ,CAACyB,MAAT,CAAgBzC,OAAO,CAACqC,KAAxB,EAA+B,CAA/B;AAZuC,gDAahC1B,YAbgC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcvC;AAxGa,CAAf","sourcesContent":["export default {\n\tasync loadProducts (context, payload) {\n\t\tconst siteUrl = context.getters.siteUrl\n\t\tconst response = await fetch(`${siteUrl}/products/`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\tbody: JSON.stringify(payload)\n\t\t})\n\t\tconst responseData = await response.json()\n\t\tif (!response.ok) {\n\t\t\tconst error = new Error(responseData.message || 'Failed to load!')\n\t\t\tthrow error\n\t\t}\n\t\tconst products = []\n\t\tfor (const key in responseData.data) {\n\t\t\tconst product = {\n\t\t\t\tid: (responseData.data[key]._id !== '') ? responseData.data[key]._id : '',\n\t\t\t\tproductName: (responseData.data[key].name !== '') ? responseData.data[key].name : '',\n\t\t\t\tprice: (responseData.data[key].price !== '') ? responseData.data[key].price : '0',\n\t\t\t\timages: (responseData.data[key].productPictures.length > 0) ? responseData.data[key].productPictures : [],\n\t\t\t\tdescription: (responseData.data[key].description !== '') ? responseData.data[key].description : ''\n\t\t\t}\n\t\t\tproducts.push(product)\n\t\t}\n\t\tcontext.commit('setProducts', products)\n\t},\n\tasync loadProduct (context, payload) {\n\t\tconst siteUrl = context.getters.siteUrl\n\t\tconst productId = payload.id\n\t\tconst response = await fetch(`${siteUrl}/products/${productId}`, {\n\t\t\tmethod: 'Get'\n\t\t})\n\t\tconst responseData = await response.json()\n\t\tif (!response.ok) {\n\t\t\tconst error = new Error(responseData.message || 'Failed to load!')\n\t\t\tthrow error\n\t\t}\n\t\t\tconst product = {\n\t\t\t\tid: (responseData.data._id !== '') ? responseData.data._id : '',\n\t\t\t\tproductName: (responseData.data.name !== '') ? responseData.data.name : '',\n\t\t\t\tprice: (responseData.data.price !== '') ? responseData.data.price : '0',\n\t\t\t\timages: (responseData.data.productPictures.length > 0) ? responseData.data.productPictures : [],\n\t\t\t\tdescription: (responseData.data.description !== '') ? responseData.data.description : ''\n\t\t\t}\n\t\treturn product\n\t},\n\tasync saveProduct (context, payload) {\n\t\tconst siteUrl = context.getters.siteUrl\n\t\tlet url = ''\n\t\tif (payload.type === 'edit') {\n\t\t\tconst productId = payload.id\n\t\t\turl = `${siteUrl}/products/update/${productId}`\n\t\t} else {\n\t\t\turl = `${siteUrl}/products/create`\n\t\t}\n\t\tconst response = await fetch(`${url}`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\tbody: JSON.stringify(payload)\n\t\t})\n\t\tconst responseData = await response.json()\n\t\tif (!response.ok) {\n\t\t\tconst error = new Error(responseData.message || 'Failed to load!')\n\t\t\tthrow error\n\t\t} else {\n\t\t\tconst products = context.state.products\n\t\t\tconst product = {\n\t\t\t\tid: (responseData.data._id !== '') ? responseData.data._id : '',\n\t\t\t\tproductName: (responseData.data.name !== '') ? responseData.data.name : '',\n\t\t\t\tprice: (responseData.data.price !== '') ? responseData.data.price : '0',\n\t\t\t\timages: (responseData.data.productPictures.length > 0) ? responseData.data.productPictures : [],\n\t\t\t\tdescription: (responseData.data.description !== '') ? responseData.data.description : ''\n\t\t\t}\n\t\t\tif (payload.type === 'edit') {\n\t\t\tconst index = products.map(prod => prod.id).indexOf(product.id)\n\t\t\tproducts.splice(index, 1)\n\t\t\t}\n\t\t\tproducts.push(product)\n\t\t\tcontext.commit('setProducts', products)\n\t\t}\n\n\t\t// \tconst product = {\n\t\t// \t\tid: (responseData.data._id !== '') ? responseData.data._id : '',\n\t\t// \t\tproductName: (responseData.data.name !== '') ? responseData.data.name : '',\n\t\t// \t\tprice: (responseData.data.price !== '') ? responseData.data.price : '0',\n\t\t// \t\timages: (responseData.data.productPictures.length > 0) ? responseData.data.productPictures : null,\n\t\t// \t\tdescription: (responseData.data.description !== '') ? responseData.data.description : ''\n\t\t// \t}\n\t\t// return product\n\t},\n\tasync deleteProducts (context, payload) {\n\t\tconst siteUrl = context.getters.siteUrl\n\t\tconst products = context.state.products\n\t\tconst productId = products[payload.index].id\n\t\tconst response = await fetch(`${siteUrl}/products/delete/${productId}`, {\n\t\t\tmethod: 'DELETE'\n\t\t})\n\t\tconst responseData = await response.json()\n\t\tif (!response.ok) {\n\t\t\tconst error = new Error(responseData.message || 'Failed to load!')\n\t\t\tthrow error\n\t\t}\n\t\tproducts.splice(payload.index, 1)\n\t\treturn responseData\n\t}\n}\n"]}]}